name: AynaLivePlayerWinBuild

on: workflow_dispatch


jobs:
  params:
    runs-on: ubuntu-latest
    outputs:
      params: ${{ steps.env-vars.outputs.params }}
    steps:
      - name: Generate cache_id
        run: |
          if [ "${{ github.event.inputs.cache_id }}" ] ; then
            echo "cache_id=${{ github.event.inputs.cache_id }}" >> $GITHUB_ENV
          else
            echo "cache_id=$(echo $RANDOM | md5sum | head -c 20)" >> $GITHUB_ENV
          fi
      - id: script
        uses: actions/github-script@v6
        with:
          script: |
            const commit = await github.rest.repos.getCommit({
              owner: 'AynaLivePlayer',
              repo: 'AynaLivePlayer',
              ref: `master`
            })
            core.exportVariable('sha', String(commit.data.sha))
            
      - id: env-vars
        name: Output environment variables
        run: echo "::set-output name=params::$(echo $(jq -n 'env'))"
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    needs: params
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            mingw-w64-x86_64-toolchain
            git
            mingw-w64-x86_64-go
            mingw-w64-x86_64-mpv
            zip
          
      - uses: actions/checkout@v3
        with: 
          repository: AynaLivePlayer/AynaLivePlayer
          ref: master

      - name: Install Fyne
        run: GOBIN=/bin/ go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build
        run:  fyne package --src $(pwd)/app/gui --name AynaLivePlayer.exe --appVersion 0.8.4 --icon ../../assets/icon.jpg
      
      - name: Add Dll
        run: cp /mingw64/bin/mpv-1.dll $(pwd)/app/gui/mpv-1.dll
      
      - name: Add zip
        run: zip -j app/gui/AynaLivePlayer-${{fromJson(needs.params.outputs.params).sha}}.zip app/gui/AynaLivePlayer.exe app/gui/mpv-1.dll
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: AynaLivePlayer-${{fromJson(needs.params.outputs.params).sha}}
          path: app/gui/AynaLivePlayer-${{fromJson(needs.params.outputs.params).sha}}.zip
            

  publish_release:
    name: Publish release
    needs: [build,params]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: List artifacts
        run: ls artifacts/
    
      - name: Get current time
        run: |
          echo "long_time=$(date "+%Y-%m-%d %H:%M")" >> $GITHUB_ENV
          echo "short_time=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
      - name: Commit version & remove existing tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git fetch --tags
          git checkout version || git checkout -b version origin/version || ( git checkout --orphan version && git rm -rf . )
          echo -e "${{ env.short_time }}" > version
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add version
          git diff-index --quiet HEAD || ( git commit -m "${{ env.short_time }}" && git push origin version )
          if [ $(git tag -l "${{ env.short_time }}") ] ;then
            gh release delete "${{ env.short_time }}" || true
            git push --delete origin "${{ env.short_time }}" || true
            git tag -d "${{ env.short_time }}" || true
          fi
          git checkout main

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*/*.zip"
          commit: version
          name: "AynaLivePlayer ${{ env.long_time }}"
          body: "**AynaLivePlayer Git commit**: https://github.com/AynaLivePlayer/AynaLivePlayer/commit/${{ fromJson(needs.params.outputs.params).sha }}\n**Build Time**: ${{ env.long_time }}\n**Build Details**: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
          tag: "${{ env.short_time }}"
          allowUpdates: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Prune old releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git checkout main
          bash prunetags.sh
